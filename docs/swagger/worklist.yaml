swagger: '2.0'
info:
  version: 0.1.0
  title: 'ASAP Worklist'
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  '/worklists':
    get:
      description: list of worklist IDs
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: string
    post:
      description: assign a task
      parameters:
        - name: task
          in: body
          required: true
          schema:
            $ref: '#/definitions/Task'
      responses:
        '200':
          description: the URL of the work list assignment
          schema:
            type: string
            format: url
  '/worklists/{worklistId}':
    get:
      description: get worklist descrition
      parameters:
        - name: worklistId
          in: path
          required: true
          type: string
      responses:
        200:
          description: list of assignment IDs
          schema:
            $ref: '#/definitions/Worklist'
  '/worklists/{worklistId}/assignments':
    get:
      description: get list of assignments
      parameters:
        - name: worklistId
          in: path
          required: true
          type: string
      responses:
        200:
          description: list of assignment IDs
          schema:
            type: array
            items:
              type: string
  '/worklists/{worklistId}/assignments/{assignmentId}':
    get:
      description: worklist
      parameters:
        - name: worklistId
          in: path
          required: true
          type: string
        - name: assignmentId
          in: path
          required: true
          type: string
      responses:
        200:
          description: assignment
          schema:
            $ref: '#/definitions/Assignment'
definitions:
  Task:
    type: object
    description: |
      the request for assignment. it can include a list of possible
      user interfaces (UX) to use
    properties:
      id:
        type: string
      url:
        type: string
        format: url
      taskmaster:
        type: string
        format: url
      ux:
        type: array
        items:
          $ref: '#/definitions/UX'
  Worklist:
    type: object
    description: represents a person or a group assigned a task
    properties:
      id:
        type: string
      url:
        type: string
        format: url
      name:
        type: string
      description:
        type: string
  Assignment:
    type:
    description: |
      the assignment of a task to a person or group
    properties:
      id:
        type: string
      url:
        type: string
        format: url
      worklist:
        type: string
        format: url
      task:
        type: string
        format: url
      taskmaster:
        type: string
        format: url
      ux:
        type: array
        items:
          $ref: '#/definitions/UX'
  UX:
    type: object
    description: |
      a possible means for entering the data requested. The type can be
      whatever is needed by the application implementation.
    properties:
      type:
        type: string
      url:
        type: string
        format: url



